{"ast":null,"code":"var _jsxFileName = \"/Users/mien/Documents/DEV/tinder-clone/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport TinderCard from 'react-tinder-card';\nimport { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport ChatContainer from '../components/ChatContainer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [cookie, setCookie, removeCookie] = useState(null);\n  const getUser = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/user', {\n        params: {\n          userId\n        }\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getUser();\n  }, [user]);\n  console.log(user);\n  const characters = [{\n    name: 'Richard Hendricks',\n    url: './img/richard.jpg'\n  }, {\n    name: 'Erlich Bachman',\n    url: './img/richard.jpg'\n  }, {\n    name: 'Monica Hall',\n    url: './img/monica.jpg'\n  }, {\n    name: 'Jared Dunn',\n    url: './img/jared.jpg'\n  }, {\n    name: 'Dinesh Chugtai',\n    url: './img/dinesh.jpg'\n  }];\n  const [lastDirection, setLastDirection] = useState();\n  const swiped = (direction, nameToDelete) => {\n    console.log('removing: ' + nameToDelete);\n    setLastDirection(direction);\n  };\n  const outOfFrame = name => {\n    console.log(name + ' left the screen!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(ChatContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swipe-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [characters.map(character => /*#__PURE__*/_jsxDEV(TinderCard, {\n          className: \"swipe\",\n          onSwipe: dir => swiped(dir, character.name),\n          onCardLeftScreen: () => outOfFrame(character.name),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: \"url(\" + character.url + \")\"\n            },\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: character.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)\n        }, character.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swipe-info\",\n          children: lastDirection ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You swiped \", lastDirection]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"SRl2cD9DUt8hX0ycotbtdm8CiVE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["TinderCard","useState","useEffect","useCookies","ChatContainer","axios","jsxDEV","_jsxDEV","Dashboard","_s","user","setUser","cookie","setCookie","removeCookie","getUser","response","get","params","userId","data","error","console","log","characters","name","url","lastDirection","setLastDirection","swiped","direction","nameToDelete","outOfFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","character","onSwipe","dir","onCardLeftScreen","style","backgroundImage","_c","$RefreshReg$"],"sources":["/Users/mien/Documents/DEV/tinder-clone/client/src/pages/Dashboard.js"],"sourcesContent":["import TinderCard from 'react-tinder-card'\nimport { useState, useEffect } from 'react'\nimport { useCookies } from 'react-cookie'\nimport ChatContainer from '../components/ChatContainer'\nimport axios from 'axios'\n\nfunction Dashboard() {\n  const [user, setUser] = useState(null)\n  const [cookie, setCookie, removeCookie ] = useState(null)\n  \n  const getUser = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/user', {\n        params: { userId }\n      })\n      setUser(response.data)\n    } catch (error) {\n      console.log(error);\n    }\n  } \n\n  useEffect(() => {\n    getUser()\n  }, [user] )\n\n  console.log(user);\n\n  const characters = [\n    {\n      name: 'Richard Hendricks',\n      url: './img/richard.jpg'\n    },\n    {\n      name: 'Erlich Bachman',\n      url: './img/richard.jpg'\n    },\n    {\n      name: 'Monica Hall',\n      url: './img/monica.jpg'\n    },\n    {\n      name: 'Jared Dunn',\n      url: './img/jared.jpg'\n    },\n    {\n      name: 'Dinesh Chugtai',\n      url: './img/dinesh.jpg'\n    }\n\n  ]\n\n  const [lastDirection, setLastDirection] = useState()\n\n  const swiped = (direction, nameToDelete) => {\n    console.log('removing: ' + nameToDelete)\n    setLastDirection(direction)\n  }\n\n  const outOfFrame = (name) => {\n    console.log(name + ' left the screen!')\n  }\n\n\n\n\n  return (\n    <div className='dashboard'>\n      <ChatContainer />\n      <div className='swipe-container'>\n        <div className='card-container'>\n          {characters.map((character) =>\n                            <TinderCard\n                                className=\"swipe\"\n                                key={character.name}\n                                onSwipe={(dir) => swiped(dir, character.name)}\n                                onCardLeftScreen={() => outOfFrame(character.name)}>\n                                <div\n                                    style={{backgroundImage: \"url(\" + character.url + \")\"}}\n                                    className=\"card\">\n                                    <h3>{character.name}</h3>\n                                </div>\n                            </TinderCard>\n                        )}\n                        <div className='swipe-info'>\n                          {lastDirection ? <p>You swiped {lastDirection}</p> : <p/>}\n                        </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}