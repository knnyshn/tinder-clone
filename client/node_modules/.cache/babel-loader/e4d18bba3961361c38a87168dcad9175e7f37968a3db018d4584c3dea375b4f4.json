{"ast":null,"code":"var _jsxFileName = \"/Users/mien/Documents/DEV/tinder-clone/client/src/components/MatchesDisplay.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MatchesDisplay(_ref) {\n  _s();\n  let {\n    matches\n  } = _ref;\n  const [matchedProfiles, setMatchedProfiles] = useState(null);\n  const matchedUserIds = matches.map(_ref2 => {\n    let {\n      user_id\n    } = _ref2;\n    return user_id;\n  });\n  const getMatches = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/users', {\n        params: {\n          userIds: JSON.stringify(matchedUserIds)\n        }\n      });\n      setMatchedProfiles(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matches-display\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n_s(MatchesDisplay, \"P9TzjPC/9hIzaaf3ZnyNfQZV230=\");\n_c = MatchesDisplay;\nexport default MatchesDisplay;\nvar _c;\n$RefreshReg$(_c, \"MatchesDisplay\");","map":{"version":3,"names":["React","axios","useState","jsxDEV","_jsxDEV","MatchesDisplay","_ref","_s","matches","matchedProfiles","setMatchedProfiles","matchedUserIds","map","_ref2","user_id","getMatches","response","get","params","userIds","JSON","stringify","data","error","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mien/Documents/DEV/tinder-clone/client/src/components/MatchesDisplay.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { useState } from 'react'\n\nfunction MatchesDisplay({ matches }) {\n\n  const [ matchedProfiles, setMatchedProfiles ] = useState(null)\n\n  const matchedUserIds = matches.map(({ user_id }) => user_id)\n  \n  const getMatches = async () => {\n\n    try {\n      const response = await axios.get('http://localhost:8000/users', {\n        params: {userIds: JSON.stringify(matchedUserIds)}\n      })\n      setMatchedProfiles(response.data)\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n      <div className='matches-display'>\n        \n      </div>\n  )\n}\n\nexport default MatchesDisplay"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,cAAcA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAEjC,MAAM,CAAEG,eAAe,EAAEC,kBAAkB,CAAE,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMS,cAAc,GAAGH,OAAO,CAACI,GAAG,CAACC,KAAA;IAAA,IAAC;MAAEC;IAAQ,CAAC,GAAAD,KAAA;IAAA,OAAKC,OAAO;EAAA,EAAC;EAE5D,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAE7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,6BAA6B,EAAE;QAC9DC,MAAM,EAAE;UAACC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACV,cAAc;QAAC;MAClD,CAAC,CAAC;MACFD,kBAAkB,CAACM,QAAQ,CAACM,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACInB,OAAA;IAAKsB,SAAS,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3B,CAAC;AAEZ;AAACvB,EAAA,CAvBQF,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAyBvB,eAAeA,cAAc;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}