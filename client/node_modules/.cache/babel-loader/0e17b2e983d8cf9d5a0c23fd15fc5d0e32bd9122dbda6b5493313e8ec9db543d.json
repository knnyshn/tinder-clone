{"ast":null,"code":"var _jsxFileName = \"/Users/mien/Documents/DEV/tinder-clone/client/src/components/ChatDisplay.js\";\nimport React from \"react\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatDisplay(_ref) {\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const getUsersMessages = async () => {\n    const response = await axios.get('http://localhost:8000/messages', {\n      params: {\n        userId: userId,\n        correspondingUserId: clickedUserId\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["React","Chat","ChatInput","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDisplay","_ref","user","clickedUser","userId","user_id","clickedUserId","getUsersMessages","response","get","params","correspondingUserId","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mien/Documents/DEV/tinder-clone/client/src/components/ChatDisplay.js"],"sourcesContent":["import React from \"react\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport axios from \"axios\";\n\nfunction ChatDisplay({ user, clickedUser }) {\n  const userId = user?.user_id\n  const clickedUserId = clickedUser?.user_id\n  \n  const getUsersMessages = async () => {\n    const response = await axios.get('http://localhost:8000/messages', {\n      params: {userId: userId, correspondingUserId: clickedUserId}\n    })\n  }\n  \n  return (\n    <>\n      <Chat />\n      <ChatInput />\n    </>\n  );\n}\n\nexport default ChatDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,WAAWA,CAAAC,IAAA,EAAwB;EAAA,IAAvB;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACxC,MAAMG,MAAM,GAAGF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,OAAO;EAC5B,MAAMC,aAAa,GAAGH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,OAAO;EAE1C,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,gCAAgC,EAAE;MACjEC,MAAM,EAAE;QAACN,MAAM,EAAEA,MAAM;QAAEO,mBAAmB,EAAEL;MAAa;IAC7D,CAAC,CAAC;EACJ,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA,CAACJ,IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRnB,OAAA,CAACH,SAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACb,CAAC;AAEP;AAACC,EAAA,GAhBQjB,WAAW;AAkBpB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}